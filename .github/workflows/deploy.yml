name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Install sshpass
      run: |
        sudo apt-get update
        sudo apt-get install -y sshpass

    - name: Check SSH Connection
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
      run: |
        echo "Checking SSH connection to server..."
        sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 $SSH_USERNAME@$SERVER_IP "echo SSH connection successful" || { echo "SSH connection failed"; exit 1; }

    - name: Deploy to Server
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        APP_PATH: ${{ secrets.APP_PATH }}
        REPO_URL: ${{ secrets.REPO_URL }}
      run: |
        if [ "${GITHUB_REF}" == "refs/heads/development" ]; then
          echo "Deploying to Development Server..."
          APP_PATH=${{ secrets.APP_PATH_DEV }}
          git_branch="development"
        elif [ "${GITHUB_REF}" == "refs/heads/main" ]; then
          echo "Deploying to Production Server..."
          APP_PATH=${{ secrets.APP_PATH_PROD }}
          git_branch="main"
        else
          echo "No deployment required for branch ${GITHUB_REF}"
          exit 0
        fi
        
        sshpass -p $SSH_PASSWORD ssh -tt -o StrictHostKeyChecking=no $SSH_USERNAME@$SERVER_IP << 'EOF'
          set -e
          echo "Checking if $APP_PATH is a Git repository..."
          
          if [ -d "$APP_PATH/.git" ]; then
            echo "Git repository found. Pulling latest changes..."
            cd $APP_PATH || { echo "Failed to navigate to directory"; exit 1; }
            git pull origin $git_branch || { echo "Git pull failed"; exit 1; }
          else
            echo "No Git repository found. Cloning repository..."
            if [ -d "$APP_PATH" ]; then
              echo "Removing existing directory..."
              rm -rf $APP_PATH
            fi
            mkdir -p $APP_PATH
            git clone $REPO_URL $APP_PATH || { echo "Git clone failed"; exit 1; }
          fi

          echo "Navigating to application directory..."
          cd $APP_PATH || { echo "Directory not found"; exit 1; }

          echo "Installing dependencies..."
          npm install || { echo "NPM install failed"; exit 1; }

          echo "Deployment completed successfully!"
          exit 0
        EOF
